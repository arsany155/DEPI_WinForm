// <auto-generated />
using System;
using Depi_WinForm;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Depi_WinForm.Migrations
{
    [DbContext(typeof(Test_Context))]
    [Migration("20240817220009_fixsomething")]
    partial class fixsomething
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Depi_WinForm.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Crs_Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Depi_WinForm.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Dept_Manager")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dept_Manager");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Depi_WinForm.Instructor", b =>
                {
                    b.Property<int>("InsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsId"));

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("InsDegree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InsId");

                    b.HasIndex("DeptId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("Depi_WinForm.Instructor_Course", b =>
                {
                    b.Property<int>("CrsId")
                        .HasColumnType("int");

                    b.Property<int>("InsId")
                        .HasColumnType("int");

                    b.Property<string>("Evaluation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CrsId", "InsId");

                    b.HasIndex("InsId");

                    b.ToTable("Instructor_Courses");
                });

            modelBuilder.Entity("Depi_WinForm.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Depi_WinForm.Student_Course", b =>
                {
                    b.Property<int>("StId")
                        .HasColumnType("int");

                    b.Property<int>("CrsId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.HasKey("StId", "CrsId");

                    b.HasIndex("CrsId");

                    b.ToTable("Student_Courses");
                });

            modelBuilder.Entity("Depi_WinForm.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Depi_WinForm.Course", b =>
                {
                    b.HasOne("Depi_WinForm.Topic", "Topic")
                        .WithMany("Courses")
                        .HasForeignKey("TopicId");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Depi_WinForm.Department", b =>
                {
                    b.HasOne("Depi_WinForm.Instructor", "instructors")
                        .WithMany("Departments")
                        .HasForeignKey("Dept_Manager");

                    b.Navigation("instructors");
                });

            modelBuilder.Entity("Depi_WinForm.Instructor", b =>
                {
                    b.HasOne("Depi_WinForm.Department", "department")
                        .WithMany("Instructors")
                        .HasForeignKey("DeptId");

                    b.Navigation("department");
                });

            modelBuilder.Entity("Depi_WinForm.Instructor_Course", b =>
                {
                    b.HasOne("Depi_WinForm.Course", "Course")
                        .WithMany("Instructor_Courses")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Depi_WinForm.Instructor", "Instructor")
                        .WithMany("Instructor_Courses")
                        .HasForeignKey("InsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Depi_WinForm.Student", b =>
                {
                    b.HasOne("Depi_WinForm.Department", "department")
                        .WithMany("Students")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("Depi_WinForm.Student_Course", b =>
                {
                    b.HasOne("Depi_WinForm.Course", "Course")
                        .WithMany("Student_Courses")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Depi_WinForm.Student", "Student")
                        .WithMany("Student_Courses")
                        .HasForeignKey("StId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Depi_WinForm.Course", b =>
                {
                    b.Navigation("Instructor_Courses");

                    b.Navigation("Student_Courses");
                });

            modelBuilder.Entity("Depi_WinForm.Department", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Depi_WinForm.Instructor", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Instructor_Courses");
                });

            modelBuilder.Entity("Depi_WinForm.Student", b =>
                {
                    b.Navigation("Student_Courses");
                });

            modelBuilder.Entity("Depi_WinForm.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
